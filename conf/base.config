
// Job paramaters to set for this environment

params.scratch = false

// Resource manager settings

// Process setting

process {

  // Global cluster parameters
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'

  container = "docker://ikmb/deepvariant:1.3"

  // Specific cluster parameters for each process

	withLabel: whatshap {
        	container = "docker://quay.io/biocontainers/whatshap:1.1--py36hae55d0a_1"
	        time = { check_max( 12.h * task.attempt, 'time' ) }
	}
	withLabel: picard {
		container = "docker://quay.io/biocontainers/picard:2.26.11--hdfd78af_0"
	}
	withLabel: deepvariant {
		container = "docker://google/deepvariant:1.4.0"
	}
	withLabel: rtgtools {
		container = "docker://quay.io/biocontainers/rtg-tools:3.11--0"
	}
	withLabel: glnexus {
		container = "docker://quay.io/mlin/glnexus:v1.3.1"
	}	
        withLabel: mosdepth {
                container = "quay.io/biocontainers/mosdepth:0.2.9--hbeb723e_1"
        }
	withLabel: manta {
		container = "docker://quay.io/biocontainers/manta:1.6.0--h9ee0642_1"
	}
	withLabel: pbmm2 {
		container = "docker://quay.io/biocontainers/pbmm2:1.7.0--hdcc8f71_0"
	}
	withLabel: pbsv {
		container = "docker://quay.io/biocontainers/pbsv:2.8.0--h9ee0642_0"
	}
	withLabel: vep {
        	container = "docker://quay.io/biocontainers/ensembl-vep:99.2--pl526hecc5488_0"
	}
        withLabel: multiqc {
		container = "docker://quay.io/biocontainers/multiqc:1.12--pyhdfd78af_0"
        }
        withLabel: fastp {
		container = "docker://quay.io/biocontainers/fastp:0.23.2--h79da9fb_0"
        }
	withName:FASTP {
		cpus = params.max_cpus
		time = { check_max( 12.h * task.attempt, 'time' ) }
		memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	}
	withName: PBSV_SIG {
		time = { check_max( 60.h * task.attempt, 'time' ) }
                memory = { check_max(32.GB * task.attempt, 'memory' ) }
                cpus = 4
	}
	withName: PBSV_CALL {
		time = { check_max( 60.h * task.attempt, 'time' ) }
                memory = { check_max(32.GB * task.attempt, 'memory' ) }
                cpus = params.max_cpus
	}
	withName: MANTA {
		time = { check_max( 60.h * task.attempt, 'time' ) }
                memory = { check_max(32.GB * task.attempt, 'memory' ) }
                cpus = params.max_cpus
	}
	withName:'CNVKIT_PROCESS|CNVKIT_COVERAGE' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 48.GB * task.attempt, 'memory' ) }
		time = { check_max( 48.h * task.attempt, 'time' ) }
	}
	withName:'BWA|PBMM2' {
		memory = { check_max( 120.GB * task.attempt, 'memory' ) }
		time = { check_max( 24.h * task.attempt, 'time' ) }
		cpus = params.max_cpus
	}
	withName:'SAMTOOLS_MERGE_AND_DEDUP|SAMTOOLS_MERGE_BAM' {
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
	}

	withName:DEEPVARIANT {
		time = { check_max( 60.h * task.attempt, 'time' ) }
                memory = { check_max(32.GB * task.attempt, 'memory' ) }
                cpus = params.max_cpus
	}
	withName:  VEP {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
                memory = { 48.GB * task.attempt }
		time = { check_max( 12.h * task.attempt, 'time' ) }
	}

	withName: GLNEXUS {
		cpus = { check_max( 16 * task.attempt, 'cpus' ) }
		memory = { check_max( 48.GB * task.attempt, 'memory' ) }
		time = { check_max( 48.h * task.attempt, 'time' ) }
	}
	withName: 'WGS_COVERAGE|PICARD_WGS_METRICS' {
		memory = { 12.GB * task.attempt }
                cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		time = { check_max( 18.h * task.attempt, 'time' ) }
	}
	withName: VCF_GET_SAMPLE {
		memory = { check_max( 12.GB * task.attempt, 'memory' ) }
                cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		time = { check_max( 4.h * task.attempt, 'time' ) }
	}

}



